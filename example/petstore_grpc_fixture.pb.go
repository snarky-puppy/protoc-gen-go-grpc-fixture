// Code generated by protoc-gen-go-grpc-fixture. DO NOT EDIT.
// source: petstore.proto

package example

import (
	context "context"
	protoc_gen_go_grpc_fixture "github.com/snarky-puppy/protoc-gen-go-grpc-fixture"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PetStoreClient is the fixture stub API for PetStore service.
type petStoreFixtures struct {
	baseDir string
}

func NewPetStoreFixtures(baseDir string) PetStoreClient {
	return &petStoreFixtures{baseDir: baseDir}
}

func (c *petStoreFixtures) GetAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Pets, error) {
	out := new(Pets)
	return protoc_gen_go_grpc_fixture.Fixture(c.baseDir, PetStore_GetAll_FullMethodName+".json", out)
}

func (c *petStoreFixtures) GetPet(ctx context.Context, in *Pet, opts ...grpc.CallOption) (*Pet, error) {
	out := new(Pet)
	return protoc_gen_go_grpc_fixture.Fixture(c.baseDir, PetStore_GetPet_FullMethodName+".json", out)
}

func (c *petStoreFixtures) CreatePet(ctx context.Context, in *Pet, opts ...grpc.CallOption) (*Pet, error) {
	out := new(Pet)
	return protoc_gen_go_grpc_fixture.Fixture(c.baseDir, PetStore_CreatePet_FullMethodName+".json", out)
}

func (c *petStoreFixtures) UpdatePet(ctx context.Context, in *Pet, opts ...grpc.CallOption) (*Pet, error) {
	out := new(Pet)
	return protoc_gen_go_grpc_fixture.Fixture(c.baseDir, PetStore_UpdatePet_FullMethodName+".json", out)
}

func (c *petStoreFixtures) DeletePet(ctx context.Context, in *Pet, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	return protoc_gen_go_grpc_fixture.Fixture(c.baseDir, PetStore_DeletePet_FullMethodName+".json", out)
}
